export const caseStudiesData = [
  {
    type: 2,
    title: "스크롤 게이지 인터랙션 구현",
    techStack: ["React", "TypeScript", "CSS"],
    situation: `프로젝트에서 스크롤 위치에 따라 연혁 진행 상황을 직관적으로 보여주는 게이지 UI가 필요했습니다.
하지만 기기마다 화면 높이가 달라 고정된 스크롤 기준을 잡기 어려웠고, 단순 색상 변화만으로는 자연스러운 효과를 줄 수 없었습니다.`,
    task: `기기 크기에 상관없이 동일하게 동작하는 스크롤 게이지를 구현하고, 위/아래 스크롤 모두 반영되도록 하며, 연혁 블록 활성화 여부를 동적으로 표시해야 했습니다.`,
    thoughtProcess: [
      "스크롤 포인트를 절대값으로 잡게되면 화면마다 높이가 다르기 때문에 어떤 기기에서든 자연스러운 구현이 안될것이라는 생각이 들었습니다.",
      "단순 색상 변경만으로는 위/아래 스크롤 시 비활성화가 구현되지 않으므로, refNum과 index를 활용한 동적 활성화가 필요하다고 생각했습니다.",
      "진행률을 %로 계산하면 화면 크기, 객체 내용의 크기와 상관없이 자연스러운 애니메이션이 가능하다고 생각이 들었습니다.",
    ],
    action: [
      "화면 중앙(window.innerHeight / 2)을 기준점으로 설정하여 기기 해상도와 관계없이 동일한 트리거 적용",
      "각 블록의 getBoundingClientRect().top 값을 기준으로 현재 스크롤 위치(currentScroll) 계산",
      "progressValue = (currentScroll / progressHeight.clientHeight) * 100로 % 계산 후 span 높이에 반영",
      "배열 index와 refNum을 비교해 블록 활성화/비활성화 제어",
    ],
    result: `그 결과 기기 해상도와 상관없이 자연스럽게 게이지가 차오르고 줄어드는 인터랙션을 완성했습니다.`,
    media: "/work/scroll.mp4",
  },
  {
    type: 1,
    title: "kiosk 결제 시스템 개선",
    techStack: ["React", "electron", "miro"],
    situation: `기존 키오스크는 Daou 결제 방식만 지원하고 있었습니다.
새로운 요구사항으로 KIS 결제 방식을 추가 연동해야 했고, 단순히 교체가 아닌 관리자가 선택 가능하도록 구현이 필요했습니다.
추가로, 전역 상태 관리(Recoil) 문제로 인해 간헐적으로 결제 금액이 올바르게 반영되지 않는 오류가 발생하는 이슈도 있었습니다.`,
    task: `Daou / KIS 결제 방식을 각각 구현하고, 매장의 설정에 따라 선택적으로 동작하도록 해야 했습니다.
전역 상태 관리 문제를 해결하여 결제 금액이 안정적으로 반영되도록 수정해야 했습니다.`,
    thoughtProcess: [
      "먼저 기존의 결제 플로우를 플로우 차트로 시각화하여 분석했습니다",
      "이를 통해 결제 값이 어떤 전역 변수를 통해 관리되는지, 그리고 어떤 부분에서 초기화가 되지 않아 문제가 발생하는지 확인할 수 있었습니다.",
      "이후 수정 후의 결제 플로우도 다시 작성하여, Daou와 KIS의 분기 로직을 명확히 정리했습니다.",
    ],
    action: [
      "1. 전역 상태 관리 개선",
      "무작위로 사용되던 전역 변수를 제거하고, props를 통한 값 전달 방식을 적용했습니다.",
      "결제 중에는 올바른 금액이 유지되고, 결제 취소 시 자동으로 상태가 초기화되도록 변경했습니다.",
      "2. 결제 방식 분리",
      "각 결제 방식을 별도의 모듈로 분리하고, 결제 시 API를 통해 매장의 vanType을 불러와 실시간으로 선택된 VAN 방식으로 결제가 진행되도록 구현했습니다.",
    ],
    result: `선택한 금액과 최종 결제 금액이 불일치하던 오류를 해결했습니다.
관리자가 지정한 VAN 타입(Daou / KIS)에 맞춰 정상적으로 결제가 가능해졌습니다.
이후 다른 프로젝트에서도 이 구조를 재활용할 수 있게 되어, 결제 개발 소요 시간이 크게 단축되는 효과가 있었습니다.`,
    media: "",
  },
];
